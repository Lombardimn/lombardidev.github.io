---
import type {iconPaths} from '@/utils/IconPaths'
import Icon from '@/components/globals/Icon.astro';
import Toggle from '@/components/navbar/Toggle.astro';

/* Items del Menú */
const textLinks: {
                    label: string,
                    href: string 
                } [] = [
                    {label: 'Inicio', href: '/'},
                    {label: 'Proyectos', href: '/projects/'},
                    {label: 'Sobre Mí', href: '/about/'}
                ];

/** Enlaces a redes sociales */
const iconLinks: { label: string, 
                    href: string,
                    icon: keyof typeof iconPaths
                } [] = [
                        { label: 'GitHub', href: 'https://github.com/Lombardimn', icon: 'github-logo' },
                        { label: 'LinkedIn', href: 'https://linkedin.com/in/mnlombardi/', icon: 'linkedin-logo' },
                        { label: 'Instagram', href: 'https://www.instagram.com/lombardimn/', icon: 'instagram-logo' },
                    ];
---

<nav>
    <section class="menu-header">
        <a href="/" class="site-title">
        <img
            class="nav-img"
            src="/assets/icons/logomain.png"
            alt="Imagen Logo de LombardiDev"
        >
        </a>
        <menu-button>
            <template>
                <button class="menu-button" aria-expanded="false">
                    <span class="sr-only">Menú</span>
                    <Icon icon="list" />
                </button>
            </template>
        </menu-button>
    </section>
    <section id="menu-content">
        <ul class="nav-items">
            {
                textLinks.map(({label, href}) =>(
                    <li>
                        <a
                            aria-current={Astro.url.pathname === href}
                            class:list={['link',{
                                active: Astro.url.pathname === href ||
                                        (href !== '/' && Astro.url.pathname.startsWith(href)),
                            },]}
                            href={href}
                        >
                            {label}
                        </a>
                    </li>
                ))
            }
        </ul>
        <div class="menu-footer">
            <div class="socials">
                {
                    iconLinks.map(({ href, icon, label }) => (
                        <a href={href} class="social">
                            <span class="sr-only">{label}</span>
                            <Icon icon={icon} />
                        </a>
                    ))
                }
            </div>
            <div class="theme-toggle">
                <Toggle />
            </div>
        </div>
    </section>
</nav>

<script>
    class MenuButton extends HTMLElement {
		constructor() {
			super();

            /** Inyectar el botón de cambio de menú cuando se ejecuta JS. */ 
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;

            /** Ocultar menú (se muestra por defecto para soportar navegadores no-JS). */
			const menu = document.getElementById('menu-content')!;
			if (menu){
                menu.hidden = true;
            }

            /** Establece si el menú está expandido o contraído. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
                if (menu){
                    menu.hidden = !expand;
                }
			};

            /** Alternar la visibilidad del menú cuando se hace clic en el botón de menú. */
			btn.addEventListener('click', () => setExpanded(menu.hidden));

            /** Ocultar botón de menú para pantallas grandes. */
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};

            const mediaQueries = window.matchMedia('(min-width: 50em)');
			handleViewports(mediaQueries);
			mediaQueries.addEventListener('change', handleViewports);
        };
    }
    customElements.define('menu-button', MenuButton);
</script>

<style>
    nav {
        z-index: 9999;
        position: relative;
        font-family: var(--font-brand);
        font-weight: 500;
        margin-bottom: 3.5rem;
    }

    .menu-header {
        display: flex;
        justify-content: space-between;
        gap: .5rem;
        padding: 1.5rem;
    }

    .nav-img {
        height: 72px;
        width: 72px;
        position: absolute;
        top: 6px;
        filter: var(--shadow-dropmd);
    }

    .site-title {
        display: flex;
        gap: .5rem;
        align-items: center;
        line-height: 1.1;
        color: var(--gray-0);
        text-decoration: none;
    }

    .menu-button {
        position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
    }

    .menu-button[aria-expanded='true'] {
        color: var(--gray-0);
		background: 
            linear-gradient(180deg, var(--gray-600), transparent),
            radial-gradient(var(--gray-900), var(--gray-800) 150%);
    }

    .menu-button[hidden] {
        display: none;
    }

    .menu-button::before {
        content: '';
        position: absolute;
        inset: -1px;
        background: var(--gradient-stroke);
        border-radius: 999rem;
        z-index: -1;
    }

    #menu-content {
        position: absolute;
        left: 0;
        right: 0;
    }

    .nav-items {
        margin: 0;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        font-size: var(--text-md);
        line-height: 1.2;
        list-style: none;
        padding: 2rem;
        background-color: var(--gray-999);
        border-bottom: 1px solid var(--gray-800);
    }

    .link {
        display: inline-block;
		color: var(--accent-dark);
		text-decoration: none;
    }

    .link.active {
        color: var(--gray-0);
    }

    .menu-footer {
        --icon-size: var(--text-xl);
        --icon-padding: .5rem;

        display: flex;
        justify-content: space-between;
        gap: .75rem;
        padding: 1.5rem 2rem 1.5rem 1.5rem;
        border-radius: 0 0 0.75rem 0.75rem;
        background-color: var(--gray-999);
        box-shadow: var(--shadow-lg);
    }

    .socials {
        display: flex;
        flex-wrap: wrap;
        gap: .625rem;
        font-size: var(--icon-size);
    }

    .social {
        display: flex;
        padding: var(--icon-padding);
        text-decoration: none;
        color: var(--accent-dark);
        transition: color var(--theme-transition);
    }

    .social:hover,
    .social:focus {
        display: flex;
        align-items: center;
        height: calc(var(--icon-size) + 2 * var(--icon-padding));
    }

    .theme-toggle  {
        display: flex;
        align-items: center;
        height: calc(var(--icon-size) + 2 * var(--icon-padding));
    }

    @media (min-width: 50em){
        nav {
            display: grid;
            grid-template-columns: 1fr auto 1fr;
			align-items: center;
			padding: 2.5rem 5rem;
			gap: 1rem;
        }

        .menu-header {
			padding: 0;
		}

        .nav-img {
            height: 96px;
            width: 96px;
            position: absolute;
            top: 10px;
            filter: var(--shadow-dropmd);
        }

        .site-title {
			font-size: var(--text-lg);
		}

        #menu-content {
			display: contents;
		}

        .nav-items {
			position: relative;
			flex-direction: row;
			font-size: var(--text-sm);
			border-radius: 999rem;
			border: 0;
			padding: 0.5rem 0.5625rem;
			background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
			box-shadow: var(--shadow-md);
		}

        .nav-items::before {
			position: absolute;
			inset: -1px;
			content: '';
			background: var(--gradient-stroke);
			border-radius: 999rem;
			z-index: -1;
		}

        .link {
			padding: .5rem 1rem;
			border-radius: 999rem;
			transition: color var(--theme-transition), background-color var(--theme-transition);
		}

        .link:hover,
		.link:focus {
			color: var(--gray-100);
			background-color: var(--accent-subtle-overlay);
		}

        .link.active {
            color: var(--accent-text-over);
            background-color: var(--accent-regular);
        }

        .menu-footer {
            --icon-padding: .375rem;

            justify-self: flex-end;
            align-items: center;
            padding: 0;
            background-color: transparent;
            box-shadow: none;
        }

        .socials {
            display: none;
        }
    }

    @media (min-width: 60em) {
        .socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}

        .nav-img {
            height: 120px;
            width: 120px;
            position: absolute;
            top: 8px;
            filter: var(--shadow-dropmd);
        }
    }

	@media (forced-colors: active) {
		.link.active {
			color: SelectedItem;
		}
	}
</style>